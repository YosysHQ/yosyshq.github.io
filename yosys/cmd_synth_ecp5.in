@cmd_header synth_ecp5@
<h1>synth_ecp5 - synthesis for ECP5 FPGAs</h1>
<pre>
    synth_ecp5 [options]

This command runs synthesis for ECP5 FPGAs.

    -top &lt;module&gt;
        use the specified module as top module

    -blif &lt;file&gt;
        write the design to the specified BLIF file. writing of an output file
        is omitted if this parameter is not specified.

    -edif &lt;file&gt;
        write the design to the specified EDIF file. writing of an output file
        is omitted if this parameter is not specified.

    -json &lt;file&gt;
        write the design to the specified JSON file. writing of an output file
        is omitted if this parameter is not specified.

    -run &lt;from_label&gt;:&lt;to_label&gt;
        only run the commands between the labels (see below). an empty
        from label is synonymous to 'begin', and empty to label is
        synonymous to the end of the command list.

    -noflatten
        do not flatten design before synthesis

    -retime
        run 'abc' with -dff option

    -noccu2
        do not use CCU2 cells in output netlist

    -nodffe
        do not use flipflops with CE in output netlist

    -nobram
        do not use BRAM cells in output netlist

    -nodram
        do not use distributed RAM cells in output netlist

    -nowidelut
        do not use PFU muxes to implement LUTs larger than LUT4s

    -abc2
        run two passes of 'abc' for slightly improved logic density

    -vpr
        generate an output netlist (and BLIF file) suitable for VPR
        (this feature is experimental and incomplete)


The following commands are executed by this synthesis command:

    begin:
        read_verilog -lib +/ecp5/cells_sim.v +/ecp5/cells_bb.v
        hierarchy -check -top &lt;top&gt;

    flatten:    (unless -noflatten)
        proc
        flatten
        tribuf -logic
        deminout

    coarse:
        synth -run coarse

    bram:    (skip if -nobram)
        memory_bram -rules +/ecp5/bram.txt
        techmap -map +/ecp5/brams_map.v

    dram:    (skip if -nodram)
        memory_bram -rules +/ecp5/dram.txt
        techmap -map +/ecp5/drams_map.v

    fine:
        opt -fast -mux_undef -undriven -fine
        memory_map
        opt -undriven -fine
        techmap -map +/techmap.v -map +/ecp5/arith_map.v
        abc -dff    (only if -retime)

    map_ffs:
        dffsr2dff
        dff2dffs
        opt_clean
        dff2dffe -direct-match $_DFF_* -direct-match $__DFFS_*
        techmap -D NO_LUT -map +/ecp5/cells_map.v
        opt_expr -undriven -mux_undef
        simplemap
        ecp5_ffinit

    map_luts:
        abc          (only if -abc2)
        techmap -map +/ecp5/latches_map.v
        abc -lut 4:7 -dress
        clean

    map_cells:
        techmap -map +/ecp5/cells_map.v    (with -D NO_LUT in vpr mode)
        clean

    check:
        hierarchy -check
        stat
        check -noinit

    blif:
        opt_clean -purge                                     (vpr mode)
        write_blif -attr -cname -conn -param &lt;file-name&gt;     (vpr mode)
        write_blif -gates -attr -param &lt;file-name&gt;           (non-vpr mode)

    edif:
        write_edif &lt;file-name&gt;

    json:
        write_json &lt;file-name&gt;

</pre>
@footer@
