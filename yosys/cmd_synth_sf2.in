@cmd_header synth_sf2@
<h1>synth_sf2 - synthesis for SmartFusion2 and IGLOO2 FPGAs</h1>
<pre>
    synth_sf2 [options]

This command runs synthesis for SmartFusion2 and IGLOO2 FPGAs.

    -top &lt;module&gt;
        use the specified module as top module

    -edif &lt;file&gt;
        write the design to the specified EDIF file. writing of an output file
        is omitted if this parameter is not specified.

    -vlog &lt;file&gt;
        write the design to the specified Verilog file. writing of an output file
        is omitted if this parameter is not specified.

    -json &lt;file&gt;
        write the design to the specified JSON file. writing of an output file
        is omitted if this parameter is not specified.

    -run &lt;from_label&gt;:&lt;to_label&gt;
        only run the commands between the labels (see below). an empty
        from label is synonymous to 'begin', and empty to label is
        synonymous to the end of the command list.

    -noflatten
        do not flatten design before synthesis

    -noiobs
        run synthesis in "block mode", i.e. do not insert IO buffers

    -clkbuf
        insert direct PAD-&gt;global_net buffers

    -retime
        run 'abc' with '-dff -D 1' options


The following commands are executed by this synthesis command:

    begin:
        read_verilog -lib +/sf2/cells_sim.v
        hierarchy -check -top &lt;top&gt;

    flatten:    (unless -noflatten)
        proc
        flatten
        tribuf -logic
        deminout

    coarse:
        synth -run coarse

    fine:
        opt -fast -mux_undef -undriven -fine
        memory_map
        opt -undriven -fine
        techmap -map +/techmap.v -map +/sf2/arith_map.v
        opt -fast
        abc -dff -D 1    (only if -retime)

    map_ffs:
        dfflegalize -cell $_DFFE_PN?P_ x -cell $_SDFFCE_PN?P_ x -cell $_DLATCH_PN?_ x
        techmap -D NO_LUT -map +/sf2/cells_map.v
        opt_expr -mux_undef
        simplemap

    map_luts:
        abc -lut 4
        clean

    map_cells:
        techmap -map +/sf2/cells_map.v
        clean

    map_iobs:
        clkbufmap -buf CLKINT Y:A [-inpad CLKBUF Y:PAD]    (unless -noiobs, -inpad only passed if -clkbuf)
        iopadmap -bits -inpad INBUF Y:PAD -outpad OUTBUF D:PAD -toutpad TRIBUFF E:D:PAD -tinoutpad BIBUF E:Y:D:PAD    (unless -noiobs
        clean

    check:
        hierarchy -check
        stat
        check -noinit
        blackbox =A:whitebox

    edif:
        write_edif -gndvccy &lt;file-name&gt;

    vlog:
        write_verilog &lt;file-name&gt;

    json:
        write_json &lt;file-name&gt;

</pre>
@footer@
